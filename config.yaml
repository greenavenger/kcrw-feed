# KCRW feed generator config.yaml

# The root URL of the KCRW website
# source_root: "https://www.kcrw.com/"
# source_root: "./tests/data/"
source_root: "http://localhost:8888/"

# The root data directory for persisting state and feeds
storage_root: "."
# state_file: "kcrw_feed.json"
state_file: "kcrw_catalog.json"
feed_directory: "feeds"

# The default HTTP timeout in seconds for requests
http_timeout: 10

# Logging configuration: Instantiate custom logger to use in code.
# Configure handlers/filters/formatters/etc. at the root level. Depend
# on default propagation to process the log messages centrally at the
# rootlogger (messages from our customer logger and from 3rd party libs).
logging:
  version: 1
  disable_existing_loggers: False
  formatters:
    simple:
      format: "[%(asctime)s.%(msecs)03d] %(levelname)s [%(name)s.%(module)s.%(funcName)s:%(lineno)d] %(message)s"
      datefmt: "%Y-%m-%dT%H:%M:%S%z"
    json:
      "()": "kcrw_feed.persistence.logger.JSONFormatter"
      fmt_keys:
        level: "levelname"
        timestamp: "timestamp"
        message: "message"
        logger: "name"
        module: "module"
        function: "funcName"
        filename: "filename"
        line: "lineno"
        thread_name: "threadName"
  handlers:
    stdout:
      class: "logging.StreamHandler"
      level: "INFO"
      formatter: "simple"
      stream: "ext://sys.stdout"
    file:
      class: "logging.handlers.RotatingFileHandler"
      level: "DEBUG"
      formatter: "json"
      filename: "./logs/kcrw_feed.jsonl"
      maxBytes: 104857600
      backupCount: 10
  loggers:
    root:
      level: "DEBUG"
      handlers: ["stdout", "file"]